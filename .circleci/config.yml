version: 2.1
executors:
  node-executor:
    docker:
      - image: cimg/node:18.20.5
    working_directory: ~/project
jobs:
  lint-and-test:
    executor: node-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - node-deps-{{ checksum "package-lock.json" }}
            - node-deps-
      - run:
          name: Install dependencies
          command: npm install
      - save_cache:
          paths:
            - node_modules
          key: node-deps-{{ checksum "package-lock.json" }}
      - run:
          name: Lint code
          command: npm run lint
      - run:
          name: Run unit tests
          command: npm test
  build:
    executor: node-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - node-deps-{{ checksum "package-lock.json" }}
            - node-deps-
      - run:
          name: Build application
          command: npm run build
      - store_artifacts:
          path: build
          destination: build-artifacts
  deploy-to-ecs:
    docker:
      - image: circleci/aws-ecs
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Configure AWS CLI
          command: |
            echo "[default]" > ~/.aws/config
            echo "aws_access_key_id = ${AWS_ACCESS_KEY_ID}" >> ~/.aws/config
            echo "aws_secret_access_key = ${AWS_SECRET_ACCESS_KEY}" >> ~/.aws/config
            echo "region = ${AWS_DEFAULT_REGION}" >> ~/.aws/config
      - run:
          name: Deploy to ECS
          command: |
            ecs-cli configure --cluster YOUR_CLUSTER_NAME --default-launch-type EC2 --region ${AWS_DEFAULT_REGION}
            ecs-cli compose --file docker-compose.yml --project-name YOUR_PROJECT_NAME service up
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - lint-and-test
      - build:
          requires:
            - lint-and-test
      - deploy-to-ecs:
          requires:
            - build
          context: aws-context