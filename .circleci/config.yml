version: 2.1

orbs:
  node: circleci/node@5.1.0
  aws-cli: circleci/aws-cli@3.1

executors:
  default:
    docker:
      - image: cimg/node:20.11.1
  security:
    docker:
      - image: zricethezav/gitleaks:v8.18.1

commands:
  install_dependencies:
    steps:
      - restore_cache:
          keys:
            - v1-deps-{{ checksum "package-lock.json" }}
            - v1-deps
      - run:
          name: Install Dependencies
          command: npm ci
      - save_cache:
          key: v1-deps-{{ checksum "package-lock.json" }}
          paths:
            - node_modules

  setup_aws:
    steps:
      - aws-cli/setup:
          profile_name: default
      - run:
          name: Make scripts executable
          command: |
            chmod +x aws/scripts/*.sh

jobs:
  security-scan:
    executor: security
    steps:
      - checkout
      - run:
          name: Run Gitleaks
          command: gitleaks detect --no-git --verbose

  lint:
    executor: default
    steps:
      - checkout
      - install_dependencies
      - run:
          name: Run ESLint
          command: npm run lint

  test:
    executor: default
    steps:
      - checkout
      - install_dependencies
      - run:
          name: Run Tests
          command: npm test

  build:
    executor: default
    steps:
      - checkout
      - install_dependencies
      - setup_aws
      - run:
          name: Build Application
          command: |
            npm run build
            ./aws/scripts/build.sh
      - persist_to_workspace:
          root: .
          paths:
            - .next
            - node_modules
            - Dockerfile
            - .dockerignore

  deploy-development:
    executor: default
    steps:
      - checkout
      - attach_workspace:
          at: .
      - setup_aws
      - run:
          name: Deploy to Development Environment
          command: |
            ./aws/scripts/deploy.sh dev

  deploy-staging:
    executor: default
    steps:
      - checkout
      - attach_workspace:
          at: .
      - setup_aws
      - run:
          name: Deploy to Staging Environment
          command: |
            ./aws/scripts/deploy.sh staging

  deploy-production:
    executor: default
    steps:
      - checkout
      - attach_workspace:
          at: .
      - setup_aws
      - run:
          name: Deploy to Production Environment
          command: |
            ./aws/scripts/deploy.sh prod

workflows:
  version: 2

  # Runs on every commit
  commit-workflow:
    jobs:
      - security-scan
      - lint
      - test:
          requires:
            - security-scan
            - lint
      - build:
          requires:
            - test

  # Runs when merged into main
  main-branch-workflow:
    jobs:
      - test:
          filters:
            branches:
              only: main
      - build:
          requires:
            - test
          filters:
            branches:
              only: main
      - deploy-staging:
          requires:
            - build
          filters:
            branches:
              only: main

  # Development deployment workflow
  development-deployment:
    jobs:
      - test:
          filters:
            branches:
              only: development
      - build:
          requires:
            - test
          filters:
            branches:
              only: development
      - deploy-development:
          requires:
            - build
          filters:
            branches:
              only: development

  # Manual production deployment
  production-deployment:
    jobs:
      - test:
          filters:
            branches:
              only: main
            tags:
              only: /^v.*/
      - build:
          requires:
            - test
          filters:
            branches:
              only: main
            tags:
              only: /^v.*/
      - approve-production:
          type: approval
          requires:
            - build
          filters:
            branches:
              only: main
            tags:
              only: /^v.*/
      - deploy-production:
          requires:
            - approve-production
          filters:
            branches:
              only: main
            tags:
              only: /^v.*/
